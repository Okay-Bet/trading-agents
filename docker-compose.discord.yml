version: '3.8'

services:
  agent-discord:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: pamela-discord-bot
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - DISCORD_API_TOKEN=${DISCORD_API_TOKEN}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - POLYMARKET_PRIVATE_KEY=${POLYMARKET_PRIVATE_KEY}
      - CLOB_API_URL=${CLOB_API_URL:-https://clob.polymarket.com/}
      - TRADING_ENABLED=${TRADING_ENABLED:-true}
      - MAX_POSITION_SIZE=${MAX_POSITION_SIZE:-100}
      - MIN_CONFIDENCE_THRESHOLD=${MIN_CONFIDENCE_THRESHOLD:-0.7}
      - TAVILY_API_KEY=${TAVILY_API_KEY}
      - NEWS_API_KEY=${NEWS_API_KEY}
      - DATABASE_URL=postgresql://pamela:pamela123@postgres-discord:5432/pamela
      - PGLITE_DATA_DIR=/app/.eliza/.elizadb
    volumes:
      - discord_data:/app/.eliza
    ports:
      - "3002:3001"  # Different port to avoid conflicts
    depends_on:
      postgres-discord:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - discord-network

  postgres-discord:
    image: postgres:15-alpine
    container_name: pamela-discord-postgres
    environment:
      - POSTGRES_USER=pamela
      - POSTGRES_PASSWORD=pamela123
      - POSTGRES_DB=pamela
    volumes:
      - postgres_discord_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"  # Different port to avoid conflicts
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pamela"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - discord-network

volumes:
  discord_data:
  postgres_discord_data:

networks:
  discord-network:
    driver: bridge