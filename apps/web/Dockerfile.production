# Production Dockerfile for Web Frontend
FROM node:20-alpine AS builder

WORKDIR /app

# Copy root package files first (includes workspaces config)
COPY package*.json ./
COPY tsconfig*.json ./

# Create directory structure
RUN mkdir -p apps/agent apps/web packages/shared

# Copy all package.json files to maintain workspace structure
COPY apps/agent/package*.json ./apps/agent/
COPY apps/web/package*.json ./apps/web/
COPY packages/shared/package*.json ./packages/shared/

# Install all dependencies (workspace aware)
RUN npm install --frozen-lockfile

# Copy source code
COPY packages/shared ./packages/shared
COPY apps/web ./apps/web

# Build shared package
WORKDIR /app/packages/shared
RUN npm run build

# Build web app
WORKDIR /app/apps/web
RUN npm run build

# Production stage using nginx
FROM nginx:alpine

# Copy custom nginx config
COPY apps/web/nginx.conf /etc/nginx/conf.d/default.conf

# Copy built files
COPY --from=builder /app/apps/web/dist /usr/share/nginx/html

# Expose port
EXPOSE 80

# Start nginx
CMD ["nginx", "-g", "daemon off;"]