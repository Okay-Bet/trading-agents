# Railway-optimized Dockerfile for Pamela Agent
FROM node:20-alpine

# Install dependencies and Bun
RUN apk add --no-cache python3 make g++ curl bash \
    && curl -fsSL https://bun.sh/install | bash \
    && mv /root/.bun/bin/bun /usr/local/bin/ \
    && chmod +x /usr/local/bin/bun \
    && ln -sf /usr/local/bin/bun /usr/bin/bun

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm ci --omit=dev || npm install --omit=dev

# Copy application code
COPY . .

# Build the application
RUN npm run build || true

# Create data directory
RUN mkdir -p /app/.eliza/.elizadb

# Set environment variables
ENV NODE_ENV=production
ENV PATH="/usr/local/bin:$PATH"
ENV BUN_INSTALL="/usr/local"

# Expose ports
EXPOSE 3000 3001

# Create a start script that uses the Railway-specific launcher
RUN printf '#!/bin/sh\n\
export PATH="/usr/bin:/usr/local/bin:$PATH"\n\
export BUN_INSTALL="/usr/local"\n\
export NODE_ENV="production"\n\
\n\
# Verify Bun is available\n\
echo "Bun version: $(bun --version)"\n\
echo "Bun location: $(which bun)"\n\
\n\
echo "Starting Pamela agent for Railway..."\n\
exec node src/start-railway.mjs\n' > /app/start-railway.sh \
    && chmod +x /app/start-railway.sh

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
  CMD curl -f http://localhost:3001/health || exit 1

# Start command
CMD ["/app/start-railway.sh"]